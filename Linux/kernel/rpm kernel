Centos 7 пересборка ядра под kvm.

yum install gcc ncurses ncurses-devel yum-utils rpm-build redhat-rpm-config rpmdevtools -y

useradd -s /bin/bash -g wheel -d /home/demin -m demin
passwd demin

su demin -l

### Creare rpm tree
rpmdev-setuptree

### Качаем source ядро
yumdownloader --source kernel
### Ставим зависимости
sudo yum-builddep kernel-3.10.0-514.26.2.el7.src.rpm
### Ставим ядро
rpm -Uvh kernel-3.10.0-514.26.2.el7.src.rpm

### Подготовка дерева исходных кодов ядра
cd ~/rpmbuild/SPECS
rpmbuild -bp --target=`uname -m` kernel.spec

######Test

[kernel@wks01-lnx-msk SPECS]$ cp -r ~/rpmbuild/BUILD/kernel-3.10.0-514.26.2.el7/linux-3.10.0-514.26.2.el7.x86_64 ~/rpmbuild/BUILD/kernel-3.10.0-514.26.2.el7.orig
[kernel@wks01-lnx-msk SPECS]$ cp -al ~/rpmbuild/BUILD/kernel-3.10.0-514.26.2.el7.orig ~/rpmbuild/BUILD/kernel-3.10.0-514.26.2.el7
kernel-3.10.0-514.26.2.el7/      kernel-3.10.0-514.26.2.el7.orig/ 
[kernel@wks01-lnx-msk SPECS]$ cp -al ~/rpmbuild/BUILD/kernel-3.10.0-514.26.2.el7.orig ~/rpmbuild/BUILD/kernel-3.10.0-514.26.2.el7.new
[kernel@wks01-lnx-msk SPECS]$ cd ~/rpmbuild/BUILD
[kernel@wks01-lnx-msk BUILD]$ diff -uNrp kernel-3.10.0-514.26.2.el7.orig kernel-3.10.0-514.26.2.el7
kernel-3.10.0-514.26.2.el7/      kernel-3.10.0-514.26.2.el7.new/  kernel-3.10.0-514.26.2.el7.orig/ 
[kernel@wks01-lnx-msk BUILD]$ diff -uNrp kernel-3.10.0-514.26.2.el7.orig kernel-3.10.0-514.26.2.el7.new > ../SOURCES/linux-3.10.0-514.26.2.el7.path

######End test


### Конфигурирование опций ядра
### сокращаем путь cd ~/rpmbuild/BUILD/kernel-*/linux-*/
cd ~/rpmbuild/BUILD/kernel-3.10.0-514.26.1.el7/linux-3.10.0-514.26.1.el7.x86_64/

### Выбераем желаемый файл конфигурации, лежит в директории ~/rpmbuild/BUILD/kernel-3.10.0-514.26.1.el7/linux-3.10.0-514.26.1.el7.x86_64/config
cp configs/kernel-3.10.0-x86_64.config .config
### либо копируем с текущего 
cp /boot/config-`uname -r` .config

#### Собираем ядро со старыми параметрами make oldconfig, либо соглашаемся со всем.
yes "" | make oldconfig
### Выбираем графику
make menuconfig
### После сборки, проверяем на наличие x86_64 в файле .config, если нет, тогда требуется добавить в верху # x86_64
# x86_64

#### Скопируем файл конфига в ~/rpmbuild/SOURCES/
cp .config ~/rpmbuild/SOURCES/kernel-3.10.0-x86_64.config
cp configs/* ~/rpmbuild/SOURCES/
### Подготовка файлов сборки
### Переходим в каталог ~/rpmbuild/SPECS
cd ~/rpmbuild/SPECS/
nano -w kernel.spec
### правим -> # % define buildid .local
%define buildid .avsw_build

### Сборка нового ядра ####

rpmbuild -bb --target=`uname -m` kernel.spec
Для исключения специфичных файлов из сборки (для более быстрой сборки):

rpmbuild -bb --without <option> --target=`uname -m` kernel.spec
Возможные значения для "option": xen, smp, up, pae, kdump, debug и debuginfo. 
Указание --without debug уберёт некоторый отладочный код из ядра, а указание --without debuginfo отменит создание пакетов kernel-debuginfo.

Для сборки только конкретного ядра:

rpmbuild -bb --with <option> --target=`uname -m` kernel.spec
Возможные значения для "option": 
--with baseonly --without up --without debug --without debuginfo --without fips --without kabichk 
Например, для сборки пакетов kernel и kernel-devel команда выглядит так:

rpmbuild -bb --with baseonly --without debuginfo --target=`uname -m` kernel.spec
Для сборки с включёнными файлами firmware:

rpmbuild -bb --with baseonly --with firmware --without debuginfo --target=`uname -m` kernel.spec 
Процесс сборки занимает много времени. Множество сообщений выводится на экран. 
На эти сообщения можно не обращать внимания, если сборка заканчивается без ошибок. В результате, собранные пакеты будут лежать в ~/rpmbuild/RPMS/<arch>.





Сборка занимает около 1 часа, если все правильно сделано, на выходе должны получить:
Provides: kernel-debug-debuginfo-x86_64 = 3.10.0-514.26.1.el7 kernel-debug-debuginfo = 3.10.0-514.26.1.el7 kernel-debug-debuginfo(x86-64) = 3.10.0-514.26.1.el7
Requires(rpmlib): rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1 rpmlib(CompressedFileNames) <= 3.0.4-1
Проверка на неупакованный(е) файл(ы): /usr/lib/rpm/check-files /home/kernel/rpmbuild/BUILDROOT/kernel-3.10.0-514.26.1.el7.x86_64
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-headers-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-debuginfo-common-x86_64-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/perf-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/perf-debuginfo-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/python-perf-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/python-perf-debuginfo-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-tools-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-tools-libs-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-tools-libs-devel-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-tools-debuginfo-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-devel-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-debuginfo-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-debug-3.10.0-514.26.1.el7.x86_64.rpm
Записан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-debug-devel-3.10.0-514.26.1.el7.x86_64.rpm
gem install eventmachinЗаписан: /home/kernel/rpmbuild/RPMS/x86_64/kernel-debug-debuginfo-3.10.0-514.26.1.el7.x86_64.rpm
Выполняется(%clean): /bin/sh -e /var/tmp/rpm-tmp.KvLCGw
+ umask 022
+ cd /home/kernel/rpmbuild/BUILD
+ cd kernel-3.10.0-514.26.1.el7
+ rm -rf /home/kernel/rpmbuild/BUILDROOT/kernel-3.10.0-514.26.1.el7.x86_64
+ exit 0


